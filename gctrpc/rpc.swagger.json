{
  "swagger": "2.0",
  "info": {
    "title": "rpc.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "GoCryptoTraderService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/addevent": {
      "post": {
        "operationId": "GoCryptoTraderService_AddEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcAddEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcAddEventRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/addportfolioaddress": {
      "post": {
        "operationId": "GoCryptoTraderService_AddPortfolioAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcAddPortfolioAddressRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/cancelallorders": {
      "post": {
        "operationId": "GoCryptoTraderService_CancelAllOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcCancelAllOrdersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcCancelAllOrdersRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/cancelbatchorders": {
      "post": {
        "operationId": "GoCryptoTraderService_CancelBatchOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcCancelBatchOrdersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcCancelBatchOrdersRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/cancelorder": {
      "post": {
        "operationId": "GoCryptoTraderService_CancelOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcCancelOrderRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/changepositionmargin": {
      "post": {
        "operationId": "GoCryptoTraderService_ChangePositionMargin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcChangePositionMarginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcChangePositionMarginRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/converttradestocandles": {
      "get": {
        "operationId": "GoCryptoTraderService_ConvertTradesToCandles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetHistoricCandlesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeInterval",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "sync",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/currencystatedeposit": {
      "get": {
        "operationId": "GoCryptoTraderService_CurrencyStateDeposit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/currencystategetall": {
      "get": {
        "operationId": "GoCryptoTraderService_CurrencyStateGetAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcCurrencyStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/currencystatetrading": {
      "get": {
        "operationId": "GoCryptoTraderService_CurrencyStateTrading",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/currencystatetradingpair": {
      "get": {
        "operationId": "GoCryptoTraderService_CurrencyStateTradingPair",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/currencystatewithdraw": {
      "get": {
        "operationId": "GoCryptoTraderService_CurrencyStateWithdraw",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/disableexchange": {
      "post": {
        "operationId": "GoCryptoTraderService_DisableExchange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGenericExchangeNameRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/disablesubsystem": {
      "get": {
        "operationId": "GoCryptoTraderService_DisableSubsystem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subsystem",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/enableexchange": {
      "post": {
        "operationId": "GoCryptoTraderService_EnableExchange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGenericExchangeNameRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/enablesubsystem": {
      "get": {
        "operationId": "GoCryptoTraderService_EnableSubsystem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subsystem",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/findmissingsavedcandleintervals": {
      "get": {
        "operationId": "GoCryptoTraderService_FindMissingSavedCandleIntervals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcFindMissingIntervalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchangeName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "interval",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/findmissingsavedtradeintervals": {
      "get": {
        "operationId": "GoCryptoTraderService_FindMissingSavedTradeIntervals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcFindMissingIntervalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchangeName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/gctscript/autoload": {
      "post": {
        "operationId": "GoCryptoTraderService_GCTScriptAutoLoadToggle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptAutoLoadRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/gctscript/execute": {
      "get": {
        "operationId": "GoCryptoTraderService_GCTScriptExecute",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "script.uuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "script.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "script.path",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "script.nextRun",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/gctscript/list": {
      "post": {
        "operationId": "GoCryptoTraderService_GCTScriptListAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptListAllRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/gctscript/query": {
      "get": {
        "operationId": "GoCryptoTraderService_GCTScriptQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptQueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "script.uuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "script.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "script.path",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "script.nextRun",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/gctscript/read": {
      "post": {
        "operationId": "GoCryptoTraderService_GCTScriptReadScript",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptQueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptReadScriptRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/gctscript/status": {
      "get": {
        "operationId": "GoCryptoTraderService_GCTScriptStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/gctscript/stop": {
      "post": {
        "operationId": "GoCryptoTraderService_GCTScriptStop",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptStopRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/gctscript/stopall": {
      "post": {
        "operationId": "GoCryptoTraderService_GCTScriptStopAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptStopAllRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/gctscript/upload": {
      "post": {
        "operationId": "GoCryptoTraderService_GCTScriptUpload",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptUploadRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getaccountinfo": {
      "get": {
        "operationId": "GoCryptoTraderService_GetAccountInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetAccountInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getaccountinfostream": {
      "get": {
        "operationId": "GoCryptoTraderService_GetAccountInfoStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/gctrpcGetAccountInfoResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of gctrpcGetAccountInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getactivedatahistoryjobs": {
      "get": {
        "operationId": "GoCryptoTraderService_GetActiveDataHistoryJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcDataHistoryJobs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getallmanagedpositions": {
      "get": {
        "operationId": "GoCryptoTraderService_GetAllManagedPositions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetManagedPositionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "includeFullOrderData",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "getFundingPayments",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeFullFundingRates",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includePredictedRate",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getauditevent": {
      "get": {
        "operationId": "GoCryptoTraderService_GetAuditEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetAuditEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getavailabletransferchains": {
      "post": {
        "operationId": "GoCryptoTraderService_GetAvailableTransferChains",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetAvailableTransferChainsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetAvailableTransferChainsRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getcollateral": {
      "get": {
        "operationId": "GoCryptoTraderService_GetCollateral",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetCollateralResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeBreakdown",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "calculateOffline",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeZeroValues",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getcollateralmode": {
      "get": {
        "operationId": "GoCryptoTraderService_GetCollateralMode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetCollateralModeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      },
      "post": {
        "operationId": "GoCryptoTraderService_SetCollateralMode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcSetCollateralModeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcSetCollateralModeRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getcommunicationrelayers": {
      "get": {
        "operationId": "GoCryptoTraderService_GetCommunicationRelayers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetCommunicationRelayersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getconfig": {
      "get": {
        "operationId": "GoCryptoTraderService_GetConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getcryptodepositaddress": {
      "post": {
        "operationId": "GoCryptoTraderService_GetCryptocurrencyDepositAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetCryptocurrencyDepositAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetCryptocurrencyDepositAddressRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getcryptodepositaddresses": {
      "post": {
        "operationId": "GoCryptoTraderService_GetCryptocurrencyDepositAddresses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetCryptocurrencyDepositAddressesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetCryptocurrencyDepositAddressesRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getcurrencytradeurl": {
      "get": {
        "operationId": "GoCryptoTraderService_GetCurrencyTradeURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetCurrencyTradeURLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getdatahistoryjobdetails": {
      "get": {
        "operationId": "GoCryptoTraderService_GetDataHistoryJobDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcDataHistoryJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nickname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fullDetails",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getdatahistoryjobsbetween": {
      "get": {
        "operationId": "GoCryptoTraderService_GetDataHistoryJobsBetween",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcDataHistoryJobs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getdatahistoryjobsummary": {
      "get": {
        "operationId": "GoCryptoTraderService_GetDataHistoryJobSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcDataHistoryJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nickname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fullDetails",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getevents": {
      "get": {
        "operationId": "GoCryptoTraderService_GetEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getexchangeassets": {
      "get": {
        "operationId": "GoCryptoTraderService_GetExchangeAssets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetExchangeAssetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getexchangeinfo": {
      "get": {
        "operationId": "GoCryptoTraderService_GetExchangeInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetExchangeInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getexchangeorderbookstream": {
      "get": {
        "operationId": "GoCryptoTraderService_GetExchangeOrderbookStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/gctrpcOrderbookResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of gctrpcOrderbookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getexchangeotp": {
      "get": {
        "operationId": "GoCryptoTraderService_GetExchangeOTPCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetExchangeOTPResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getexchangeotps": {
      "get": {
        "operationId": "GoCryptoTraderService_GetExchangeOTPCodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetExchangeOTPsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getexchangepairs": {
      "post": {
        "operationId": "GoCryptoTraderService_GetExchangePairs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetExchangePairsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetExchangePairsRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getexchanges": {
      "get": {
        "operationId": "GoCryptoTraderService_GetExchanges",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetExchangesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "enabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getexchangetickerstream": {
      "get": {
        "operationId": "GoCryptoTraderService_GetExchangeTickerStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/gctrpcTickerResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of gctrpcTickerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getforexproviders": {
      "get": {
        "operationId": "GoCryptoTraderService_GetForexProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetForexProvidersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getforexrates": {
      "get": {
        "operationId": "GoCryptoTraderService_GetForexRates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetForexRatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getfundingrates": {
      "get": {
        "operationId": "GoCryptoTraderService_GetFundingRates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetFundingRatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "paymentCurrency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includePredicted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includePayments",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "respectHistoryLimits",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getfuturespositionsorders": {
      "get": {
        "operationId": "GoCryptoTraderService_GetFuturesPositionsOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetFuturesPositionsOrdersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "underlyingPair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "underlyingPair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "underlyingPair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "respectOrderHistoryLimits",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "syncWithOrderManager",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getfuturespositionssummary": {
      "get": {
        "operationId": "GoCryptoTraderService_GetFuturesPositionsSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetFuturesPositionsSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "underlyingPair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "underlyingPair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "underlyingPair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/gethistoriccandles": {
      "get": {
        "operationId": "GoCryptoTraderService_GetHistoricCandles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetHistoricCandlesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeInterval",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "exRequest",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sync",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "useDb",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fillMissingWithTrades",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/gethistorictrades": {
      "get": {
        "operationId": "GoCryptoTraderService_GetHistoricTrades",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/gctrpcSavedTradesResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of gctrpcSavedTradesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getinfo": {
      "get": {
        "operationId": "GoCryptoTraderService_GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getlatestfundingrate": {
      "get": {
        "operationId": "GoCryptoTraderService_GetLatestFundingRate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetLatestFundingRateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includePredicted",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getleverage": {
      "get": {
        "operationId": "GoCryptoTraderService_GetLeverage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetLeverageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "underlyingPair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "underlyingPair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "underlyingPair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "marginType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderSide",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      },
      "post": {
        "operationId": "GoCryptoTraderService_SetLeverage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcSetLeverageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcSetLeverageRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getloggerdetails": {
      "get": {
        "operationId": "GoCryptoTraderService_GetLoggerDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetLoggerDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "logger",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getmanagedorders": {
      "post": {
        "operationId": "GoCryptoTraderService_GetManagedOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrdersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrdersRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getmanagedposition": {
      "get": {
        "operationId": "GoCryptoTraderService_GetManagedPosition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetManagedPositionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeFullOrderData",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "getFundingPayments",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeFullFundingRates",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includePredictedRate",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getmarginrateshistory": {
      "get": {
        "operationId": "GoCryptoTraderService_GetMarginRatesHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetMarginRatesHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "getPredictedRate",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "getLendingPayments",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "getBorrowRates",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "getBorrowCosts",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeAllRates",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "calculateOffline",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "takerFeeRate",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getmargintype": {
      "post": {
        "operationId": "GoCryptoTraderService_SetMarginType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcSetMarginTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcSetMarginTypeRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getopeninterest": {
      "get": {
        "operationId": "GoCryptoTraderService_GetOpenInterest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetOpenInterestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getorder": {
      "post": {
        "operationId": "GoCryptoTraderService_GetOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcOrderDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrderRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getorderbook": {
      "post": {
        "operationId": "GoCryptoTraderService_GetOrderbook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcOrderbookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrderbookRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getorderbookamountbyimpact": {
      "get": {
        "operationId": "GoCryptoTraderService_GetOrderbookAmountByImpact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrderbookAmountByImpactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "impactPercentage",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "sell",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "requiresRestOrderbook",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getorderbookamountbynominal": {
      "get": {
        "operationId": "GoCryptoTraderService_GetOrderbookAmountByNominal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrderbookAmountByNominalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nominalPercentage",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "sell",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "requiresRestOrderbook",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getorderbookmovement": {
      "get": {
        "operationId": "GoCryptoTraderService_GetOrderbookMovement",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrderbookMovementResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "sell",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "requiresRestOrderbook",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "purchase",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getorderbooks": {
      "get": {
        "operationId": "GoCryptoTraderService_GetOrderbooks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrderbooksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getorderbookstream": {
      "get": {
        "operationId": "GoCryptoTraderService_GetOrderbookStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/gctrpcOrderbookResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of gctrpcOrderbookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getorders": {
      "post": {
        "operationId": "GoCryptoTraderService_GetOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrdersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrdersRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getportfolio": {
      "get": {
        "operationId": "GoCryptoTraderService_GetPortfolio",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetPortfolioResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getportfoliosummary": {
      "get": {
        "operationId": "GoCryptoTraderService_GetPortfolioSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetPortfolioSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getrecenttrades": {
      "get": {
        "operationId": "GoCryptoTraderService_GetRecentTrades",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcSavedTradesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getrpcendpoints": {
      "get": {
        "operationId": "GoCryptoTraderService_GetRPCEndpoints",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetRPCEndpointsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getsavedtrades": {
      "get": {
        "operationId": "GoCryptoTraderService_GetSavedTrades",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcSavedTradesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getsubsystems": {
      "get": {
        "operationId": "GoCryptoTraderService_GetSubsystems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetSusbsytemsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/gettechnicalanalysis": {
      "get": {
        "operationId": "GoCryptoTraderService_GetTechnicalAnalysis",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetTechnicalAnalysisResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "algorithmType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "interval",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fastPeriod",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "slowPeriod",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "standardDeviationUp",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "standardDeviationDown",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "movingAverageType",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "otherExchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherPair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherPair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherPair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherAssetType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/getticker": {
      "post": {
        "operationId": "GoCryptoTraderService_GetTicker",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcTickerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetTickerRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/gettickers": {
      "get": {
        "operationId": "GoCryptoTraderService_GetTickers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetTickersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/gettickerstream": {
      "get": {
        "operationId": "GoCryptoTraderService_GetTickerStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/gctrpcTickerResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of gctrpcTickerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/modifyorder": {
      "get": {
        "operationId": "GoCryptoTraderService_ModifyOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcModifyOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "price",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/removeevent": {
      "post": {
        "operationId": "GoCryptoTraderService_RemoveEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcRemoveEventRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/removeportfolioaddress": {
      "post": {
        "operationId": "GoCryptoTraderService_RemovePortfolioAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcRemovePortfolioAddressRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/setallexchangepairs": {
      "get": {
        "operationId": "GoCryptoTraderService_SetAllExchangePairs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "enable",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/setdatahistoryjobstatus": {
      "post": {
        "operationId": "GoCryptoTraderService_SetDataHistoryJobStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcSetDataHistoryJobStatusRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/setexchangeasset": {
      "get": {
        "operationId": "GoCryptoTraderService_SetExchangeAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "enable",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/setexchangepair": {
      "post": {
        "operationId": "GoCryptoTraderService_SetExchangePair",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcSetExchangePairRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/setexchangetradeprocessing": {
      "get": {
        "operationId": "GoCryptoTraderService_SetExchangeTradeProcessing",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/setloggerdetails": {
      "post": {
        "operationId": "GoCryptoTraderService_SetLoggerDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetLoggerDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcSetLoggerDetailsRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/shutdown": {
      "get": {
        "operationId": "GoCryptoTraderService_Shutdown",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcShutdownResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/simulateorder": {
      "post": {
        "operationId": "GoCryptoTraderService_SimulateOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcSimulateOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcSimulateOrderRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/submitorder": {
      "post": {
        "operationId": "GoCryptoTraderService_SubmitOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcSubmitOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcSubmitOrderRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/updateaccountinfo": {
      "get": {
        "operationId": "GoCryptoTraderService_UpdateAccountInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetAccountInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/updatedatahistoryjobprerequisite": {
      "post": {
        "operationId": "GoCryptoTraderService_UpdateDataHistoryJobPrerequisite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcUpdateDataHistoryJobPrerequisiteRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/updateexchangesupportedpairs": {
      "get": {
        "operationId": "GoCryptoTraderService_UpdateExchangeSupportedPairs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/upsertdatahistoryjob": {
      "post": {
        "operationId": "GoCryptoTraderService_UpsertDataHistoryJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcUpsertDataHistoryJobResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcUpsertDataHistoryJobRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/websocketgetinfo": {
      "get": {
        "operationId": "GoCryptoTraderService_WebsocketGetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcWebsocketGetInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/websocketgetsubscriptions": {
      "get": {
        "operationId": "GoCryptoTraderService_WebsocketGetSubscriptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcWebsocketGetSubscriptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/websocketsetenabled": {
      "get": {
        "operationId": "GoCryptoTraderService_WebsocketSetEnabled",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "enable",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/websocketsetproxy": {
      "get": {
        "operationId": "GoCryptoTraderService_WebsocketSetProxy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "proxy",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/websocketseturl": {
      "get": {
        "operationId": "GoCryptoTraderService_WebsocketSetURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "url",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/whalebomb": {
      "post": {
        "operationId": "GoCryptoTraderService_WhaleBomb",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcSimulateOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcWhaleBombRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/withdrawaleventbydate": {
      "post": {
        "operationId": "GoCryptoTraderService_WithdrawalEventsByDate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawalEventsByExchangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawalEventsByDateRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/withdrawaleventbyexchange": {
      "post": {
        "operationId": "GoCryptoTraderService_WithdrawalEventsByExchange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawalEventsByExchangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawalEventsByExchangeRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/withdrawaleventbyid": {
      "post": {
        "operationId": "GoCryptoTraderService_WithdrawalEventByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawalEventByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawalEventByIDRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/withdrawfiatfunds": {
      "post": {
        "operationId": "GoCryptoTraderService_WithdrawFiatFunds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawFiatRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    },
    "/v1/withdrawithdrawcryptofundswfiatfunds": {
      "post": {
        "operationId": "GoCryptoTraderService_WithdrawCryptocurrencyFunds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawCryptoRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTraderService"
        ]
      }
    }
  },
  "definitions": {
    "gctrpcAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "currencies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcAccountCurrencyInfo"
          }
        }
      }
    },
    "gctrpcAccountCurrencyInfo": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "totalValue": {
          "type": "number",
          "format": "double"
        },
        "hold": {
          "type": "number",
          "format": "double"
        },
        "free": {
          "type": "number",
          "format": "double"
        },
        "freeWithoutBorrow": {
          "type": "number",
          "format": "double"
        },
        "borrowed": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcAddEventRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "item": {
          "type": "string"
        },
        "conditionParams": {
          "$ref": "#/definitions/gctrpcConditionParams"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "assetType": {
          "type": "string"
        },
        "action": {
          "type": "string"
        }
      }
    },
    "gctrpcAddEventResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "gctrpcAddPortfolioAddressRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "coinType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "balance": {
          "type": "number",
          "format": "double"
        },
        "supportedExchanges": {
          "type": "string"
        },
        "coldStorage": {
          "type": "boolean"
        }
      }
    },
    "gctrpcAuditEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        }
      }
    },
    "gctrpcBorrowCost": {
      "type": "object",
      "properties": {
        "cost": {
          "type": "string"
        },
        "size": {
          "type": "string"
        }
      }
    },
    "gctrpcCancelAllOrdersRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        }
      }
    },
    "gctrpcCancelAllOrdersResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcOrders"
          }
        },
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "gctrpcCancelBatchOrdersRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "ordersId": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "assetType": {
          "type": "string"
        },
        "walletAddress": {
          "type": "string"
        },
        "side": {
          "type": "string"
        }
      }
    },
    "gctrpcCancelBatchOrdersResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcOrders"
          }
        }
      }
    },
    "gctrpcCancelOrderRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "assetType": {
          "type": "string"
        },
        "walletAddress": {
          "type": "string"
        },
        "side": {
          "type": "string"
        }
      }
    },
    "gctrpcCandle": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string"
        },
        "low": {
          "type": "number",
          "format": "double"
        },
        "high": {
          "type": "number",
          "format": "double"
        },
        "open": {
          "type": "number",
          "format": "double"
        },
        "close": {
          "type": "number",
          "format": "double"
        },
        "volume": {
          "type": "number",
          "format": "double"
        },
        "isPartial": {
          "type": "boolean"
        }
      }
    },
    "gctrpcChangePositionMarginRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "marginType": {
          "type": "string"
        },
        "originalAllocatedMargin": {
          "type": "number",
          "format": "double"
        },
        "newAllocatedMargin": {
          "type": "number",
          "format": "double"
        },
        "marginSide": {
          "type": "string"
        }
      }
    },
    "gctrpcChangePositionMarginResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "marginType": {
          "type": "string"
        },
        "newAllocatedMargin": {
          "type": "number",
          "format": "double"
        },
        "marginSide": {
          "type": "string"
        }
      }
    },
    "gctrpcCoin": {
      "type": "object",
      "properties": {
        "coin": {
          "type": "string"
        },
        "balance": {
          "type": "number",
          "format": "double"
        },
        "address": {
          "type": "string"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcCollateralByPosition": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "openOrderSize": {
          "type": "string"
        },
        "positionSize": {
          "type": "string"
        },
        "markPrice": {
          "type": "string"
        },
        "requiredMargin": {
          "type": "string"
        },
        "totalCollateralUsed": {
          "type": "string"
        }
      }
    },
    "gctrpcCollateralForCurrency": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "excludedFromCollateral": {
          "type": "boolean"
        },
        "totalFunds": {
          "type": "string"
        },
        "availableForUseAsCollateral": {
          "type": "string"
        },
        "approxFairMarketValue": {
          "type": "string"
        },
        "weighting": {
          "type": "string"
        },
        "collateralContribution": {
          "type": "string"
        },
        "scaledToCurrency": {
          "type": "string"
        },
        "unrealisedPnl": {
          "type": "string"
        },
        "fundsInUse": {
          "type": "string"
        },
        "additionalCollateralUsed": {
          "type": "string"
        },
        "usedBreakdown": {
          "$ref": "#/definitions/gctrpcCollateralUsedBreakdown"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "gctrpcCollateralUsedBreakdown": {
      "type": "object",
      "properties": {
        "lockedInStakes": {
          "type": "string"
        },
        "lockedInNftBids": {
          "type": "string"
        },
        "lockedInFeeVoucher": {
          "type": "string"
        },
        "lockedInSpotMarginFundingOffers": {
          "type": "string"
        },
        "lockedInSpotOrders": {
          "type": "string"
        },
        "lockedAsCollateral": {
          "type": "string"
        },
        "usedInFutures": {
          "type": "string"
        },
        "usedInSpotMargin": {
          "type": "string"
        }
      }
    },
    "gctrpcCommunicationRelayer": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "connected": {
          "type": "boolean"
        }
      }
    },
    "gctrpcConditionParams": {
      "type": "object",
      "properties": {
        "condition": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "checkBids": {
          "type": "boolean"
        },
        "checkAsks": {
          "type": "boolean"
        },
        "orderbookAmount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcCryptoWithdrawalEvent": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "addressTag": {
          "type": "string"
        },
        "fee": {
          "type": "number",
          "format": "double"
        },
        "txId": {
          "type": "string"
        }
      }
    },
    "gctrpcCurrencyPair": {
      "type": "object",
      "properties": {
        "delimiter": {
          "type": "string"
        },
        "base": {
          "type": "string"
        },
        "quote": {
          "type": "string"
        }
      }
    },
    "gctrpcCurrencyState": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "withdrawEnabled": {
          "type": "boolean"
        },
        "depositEnabled": {
          "type": "boolean"
        },
        "tradingEnabled": {
          "type": "boolean"
        }
      }
    },
    "gctrpcCurrencyStateResponse": {
      "type": "object",
      "properties": {
        "currencyStates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcCurrencyState"
          }
        }
      }
    },
    "gctrpcDataHistoryJob": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "nickname": {
          "type": "string"
        },
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "interval": {
          "type": "string",
          "format": "int64"
        },
        "requestSizeLimit": {
          "type": "string",
          "format": "int64"
        },
        "maxRetryAttempts": {
          "type": "string",
          "format": "int64"
        },
        "batchSize": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "dataType": {
          "type": "string"
        },
        "conversionInterval": {
          "type": "string",
          "format": "int64"
        },
        "overwriteExistingData": {
          "type": "boolean"
        },
        "prerequisiteJobNickname": {
          "type": "string"
        },
        "decimalPlaceComparison": {
          "type": "string",
          "format": "int64"
        },
        "secondaryExchangeName": {
          "type": "string"
        },
        "issueTolerancePercentage": {
          "type": "number",
          "format": "double"
        },
        "replaceOnIssue": {
          "type": "boolean"
        },
        "jobResults": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcDataHistoryJobResult"
          }
        },
        "resultSummaries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "gctrpcDataHistoryJobResult": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "hasData": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "runDate": {
          "type": "string"
        }
      }
    },
    "gctrpcDataHistoryJobs": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcDataHistoryJob"
          }
        }
      }
    },
    "gctrpcDepositAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "chain": {
          "type": "string"
        }
      }
    },
    "gctrpcDepositAddresses": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcDepositAddress"
          }
        }
      }
    },
    "gctrpcFiatWithdrawalEvent": {
      "type": "object",
      "properties": {
        "bankName": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "bsb": {
          "type": "string"
        },
        "swift": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        }
      }
    },
    "gctrpcFindMissingIntervalsResponse": {
      "type": "object",
      "properties": {
        "exchangeName": {
          "type": "string"
        },
        "assetType": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "missingPeriods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "gctrpcForexProvider": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "verbose": {
          "type": "boolean"
        },
        "restPollingDelay": {
          "type": "string"
        },
        "apiKey": {
          "type": "string"
        },
        "apiKeyLevel": {
          "type": "string",
          "format": "int64"
        },
        "primaryProvider": {
          "type": "boolean"
        }
      }
    },
    "gctrpcForexRatesConversion": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "rate": {
          "type": "number",
          "format": "double"
        },
        "inverseRate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcFundingData": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "paymentCurrency": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "rates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcFundingRate"
          }
        },
        "latestRate": {
          "$ref": "#/definitions/gctrpcFundingRate"
        },
        "upcomingRate": {
          "$ref": "#/definitions/gctrpcFundingRate"
        },
        "paymentSum": {
          "type": "string"
        },
        "paymentMessage": {
          "type": "string"
        },
        "timeOfNextRate": {
          "type": "string"
        }
      }
    },
    "gctrpcFundingRate": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "rate": {
          "type": "string"
        },
        "payment": {
          "type": "string"
        }
      }
    },
    "gctrpcFuturePosition": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "status": {
          "type": "string"
        },
        "openingDate": {
          "type": "string"
        },
        "openingDirection": {
          "type": "string"
        },
        "openingPrice": {
          "type": "string"
        },
        "openingSize": {
          "type": "string"
        },
        "currentDirection": {
          "type": "string"
        },
        "currentPrice": {
          "type": "string"
        },
        "currentSize": {
          "type": "string"
        },
        "unrealisedPnl": {
          "type": "string"
        },
        "realisedPnl": {
          "type": "string"
        },
        "closingDate": {
          "type": "string"
        },
        "orderCount": {
          "type": "string",
          "format": "int64"
        },
        "contractSettlementType": {
          "type": "string"
        },
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcOrderDetails"
          }
        },
        "positionStats": {
          "$ref": "#/definitions/gctrpcFuturesPositionStats"
        },
        "fundingData": {
          "$ref": "#/definitions/gctrpcFundingData"
        }
      }
    },
    "gctrpcFuturesPositionStats": {
      "type": "object",
      "properties": {
        "maintenanceMarginRequirement": {
          "type": "string"
        },
        "initialMarginRequirement": {
          "type": "string"
        },
        "estimatedLiquidationPrice": {
          "type": "string"
        },
        "collateralUsed": {
          "type": "string"
        },
        "markPrice": {
          "type": "string"
        },
        "currentSize": {
          "type": "string"
        },
        "contractSize": {
          "type": "string"
        },
        "contractMultiplier": {
          "type": "string"
        },
        "contractSettlementType": {
          "type": "string"
        },
        "breakEvenPrice": {
          "type": "string"
        },
        "averageOpenPrice": {
          "type": "string"
        },
        "recentPnl": {
          "type": "string"
        },
        "marginFraction": {
          "type": "string"
        },
        "freeCollateral": {
          "type": "string"
        },
        "totalCollateral": {
          "type": "string"
        },
        "frozenBalance": {
          "type": "string"
        },
        "equityOfCurrency": {
          "type": "string"
        },
        "availableEquity": {
          "type": "string"
        },
        "cashBalance": {
          "type": "string"
        },
        "discountEquity": {
          "type": "string"
        },
        "equityUsd": {
          "type": "string"
        },
        "isolatedEquity": {
          "type": "string"
        },
        "isolatedLiabilities": {
          "type": "string"
        },
        "isolatedUpl": {
          "type": "string"
        },
        "notionalLeverage": {
          "type": "string"
        },
        "totalEquity": {
          "type": "string"
        },
        "strategyEquity": {
          "type": "string"
        }
      }
    },
    "gctrpcGCTScript": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "nextRun": {
          "type": "string"
        }
      }
    },
    "gctrpcGCTScriptAutoLoadRequest": {
      "type": "object",
      "properties": {
        "script": {
          "type": "string"
        },
        "status": {
          "type": "boolean"
        }
      }
    },
    "gctrpcGCTScriptListAllRequest": {
      "type": "object"
    },
    "gctrpcGCTScriptQueryResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "script": {
          "$ref": "#/definitions/gctrpcGCTScript"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "gctrpcGCTScriptReadScriptRequest": {
      "type": "object",
      "properties": {
        "script": {
          "$ref": "#/definitions/gctrpcGCTScript"
        }
      }
    },
    "gctrpcGCTScriptStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "scripts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcGCTScript"
          }
        }
      }
    },
    "gctrpcGCTScriptStopAllRequest": {
      "type": "object"
    },
    "gctrpcGCTScriptStopRequest": {
      "type": "object",
      "properties": {
        "script": {
          "$ref": "#/definitions/gctrpcGCTScript"
        }
      }
    },
    "gctrpcGCTScriptUploadRequest": {
      "type": "object",
      "properties": {
        "scriptName": {
          "type": "string"
        },
        "scriptData": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "archived": {
          "type": "boolean"
        },
        "overwrite": {
          "type": "boolean"
        }
      }
    },
    "gctrpcGenericExchangeNameRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        }
      }
    },
    "gctrpcGenericResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "gctrpcGetAccountInfoResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcAccount"
          }
        }
      }
    },
    "gctrpcGetAuditEventResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcAuditEvent"
          }
        }
      }
    },
    "gctrpcGetAvailableTransferChainsRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "cryptocurrency": {
          "type": "string"
        }
      }
    },
    "gctrpcGetAvailableTransferChainsResponse": {
      "type": "object",
      "properties": {
        "chains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "gctrpcGetCollateralModeResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "collateralMode": {
          "type": "string"
        }
      }
    },
    "gctrpcGetCollateralResponse": {
      "type": "object",
      "properties": {
        "subAccount": {
          "type": "string"
        },
        "collateralCurrency": {
          "type": "string"
        },
        "totalValueOfPositiveSpotBalances": {
          "type": "string"
        },
        "collateralContributedByPositiveSpotBalances": {
          "type": "string"
        },
        "usedCollateral": {
          "type": "string"
        },
        "usedBreakdown": {
          "$ref": "#/definitions/gctrpcCollateralUsedBreakdown"
        },
        "availableCollateral": {
          "type": "string"
        },
        "maintenanceCollateral": {
          "type": "string"
        },
        "unrealisedPnl": {
          "type": "string"
        },
        "currencyBreakdown": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcCollateralForCurrency"
          }
        },
        "positionBreakdown": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcCollateralByPosition"
          }
        }
      }
    },
    "gctrpcGetCommunicationRelayersResponse": {
      "type": "object",
      "properties": {
        "communicationRelayers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcCommunicationRelayer"
          }
        }
      }
    },
    "gctrpcGetConfigResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "gctrpcGetCryptocurrencyDepositAddressRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "cryptocurrency": {
          "type": "string"
        },
        "chain": {
          "type": "string"
        },
        "bypass": {
          "type": "boolean"
        }
      }
    },
    "gctrpcGetCryptocurrencyDepositAddressResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "gctrpcGetCryptocurrencyDepositAddressesRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        }
      }
    },
    "gctrpcGetCryptocurrencyDepositAddressesResponse": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcDepositAddresses"
          }
        }
      }
    },
    "gctrpcGetCurrencyTradeURLResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "gctrpcGetEventsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "exchange": {
          "type": "string"
        },
        "item": {
          "type": "string"
        },
        "conditionParams": {
          "$ref": "#/definitions/gctrpcConditionParams"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "action": {
          "type": "string"
        },
        "executed": {
          "type": "boolean"
        }
      }
    },
    "gctrpcGetExchangeAssetsResponse": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "string"
        }
      }
    },
    "gctrpcGetExchangeInfoResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "verbose": {
          "type": "boolean"
        },
        "usingSandbox": {
          "type": "boolean"
        },
        "httpTimeout": {
          "type": "string"
        },
        "httpUseragent": {
          "type": "string"
        },
        "httpProxy": {
          "type": "string"
        },
        "baseCurrencies": {
          "type": "string"
        },
        "supportedAssets": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcPairsSupported"
          }
        },
        "authenticatedApi": {
          "type": "boolean"
        }
      }
    },
    "gctrpcGetExchangeOTPResponse": {
      "type": "object",
      "properties": {
        "otpCode": {
          "type": "string"
        }
      }
    },
    "gctrpcGetExchangeOTPsResponse": {
      "type": "object",
      "properties": {
        "otpCodes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "gctrpcGetExchangePairsRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        }
      }
    },
    "gctrpcGetExchangePairsResponse": {
      "type": "object",
      "properties": {
        "supportedAssets": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcPairsSupported"
          }
        }
      }
    },
    "gctrpcGetExchangesResponse": {
      "type": "object",
      "properties": {
        "exchanges": {
          "type": "string"
        }
      }
    },
    "gctrpcGetForexProvidersResponse": {
      "type": "object",
      "properties": {
        "forexProviders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcForexProvider"
          }
        }
      }
    },
    "gctrpcGetForexRatesResponse": {
      "type": "object",
      "properties": {
        "forexRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcForexRatesConversion"
          }
        }
      }
    },
    "gctrpcGetFundingRatesResponse": {
      "type": "object",
      "properties": {
        "rates": {
          "$ref": "#/definitions/gctrpcFundingData"
        }
      }
    },
    "gctrpcGetFuturesPositionsOrdersResponse": {
      "type": "object",
      "properties": {
        "positions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcFuturePosition"
          }
        }
      }
    },
    "gctrpcGetFuturesPositionsSummaryResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "positionStats": {
          "$ref": "#/definitions/gctrpcFuturesPositionStats"
        }
      }
    },
    "gctrpcGetHistoricCandlesResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        },
        "interval": {
          "type": "string"
        },
        "candle": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcCandle"
          }
        }
      }
    },
    "gctrpcGetInfoResponse": {
      "type": "object",
      "properties": {
        "uptime": {
          "type": "string"
        },
        "availableExchanges": {
          "type": "string",
          "format": "int64"
        },
        "enabledExchanges": {
          "type": "string",
          "format": "int64"
        },
        "defaultForexProvider": {
          "type": "string"
        },
        "defaultFiatCurrency": {
          "type": "string"
        },
        "subsystemStatus": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "rpcEndpoints": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcRPCEndpoint"
          }
        }
      }
    },
    "gctrpcGetLatestFundingRateResponse": {
      "type": "object",
      "properties": {
        "rate": {
          "$ref": "#/definitions/gctrpcFundingData"
        }
      }
    },
    "gctrpcGetLeverageResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "underlyingPair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "marginType": {
          "type": "string"
        },
        "leverage": {
          "type": "number",
          "format": "double"
        },
        "orderSide": {
          "type": "string"
        }
      }
    },
    "gctrpcGetLoggerDetailsResponse": {
      "type": "object",
      "properties": {
        "info": {
          "type": "boolean"
        },
        "debug": {
          "type": "boolean"
        },
        "warn": {
          "type": "boolean"
        },
        "error": {
          "type": "boolean"
        }
      }
    },
    "gctrpcGetManagedPositionsResponse": {
      "type": "object",
      "properties": {
        "positions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcFuturePosition"
          }
        }
      }
    },
    "gctrpcGetMarginRatesHistoryResponse": {
      "type": "object",
      "properties": {
        "rates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcMarginRate"
          }
        },
        "totalRates": {
          "type": "string",
          "format": "int64"
        },
        "sumBorrowCosts": {
          "type": "string"
        },
        "avgBorrowSize": {
          "type": "string"
        },
        "sumLendingPayments": {
          "type": "string"
        },
        "avgLendingSize": {
          "type": "string"
        },
        "latestRate": {
          "$ref": "#/definitions/gctrpcMarginRate"
        },
        "predictedRate": {
          "$ref": "#/definitions/gctrpcMarginRate"
        },
        "takerFeeRate": {
          "type": "string"
        }
      }
    },
    "gctrpcGetOpenInterestResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcOpenInterestDataResponse"
          }
        }
      }
    },
    "gctrpcGetOrderRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "asset": {
          "type": "string"
        }
      }
    },
    "gctrpcGetOrderbookAmountByImpactResponse": {
      "type": "object",
      "properties": {
        "amountRequired": {
          "type": "number",
          "format": "double"
        },
        "currencySelling": {
          "type": "string"
        },
        "amountReceived": {
          "type": "number",
          "format": "double"
        },
        "currencyBuying": {
          "type": "string"
        },
        "startPrice": {
          "type": "number",
          "format": "double"
        },
        "endPrice": {
          "type": "number",
          "format": "double"
        },
        "averageOrderCost": {
          "type": "number",
          "format": "double"
        },
        "sideAffected": {
          "type": "string"
        },
        "approximateImpactSlippagePercentage": {
          "type": "number",
          "format": "double"
        },
        "updateProtocol": {
          "type": "string"
        },
        "fullOrderbookSideConsumed": {
          "type": "boolean"
        }
      }
    },
    "gctrpcGetOrderbookAmountByNominalResponse": {
      "type": "object",
      "properties": {
        "amountRequired": {
          "type": "number",
          "format": "double"
        },
        "currencySelling": {
          "type": "string"
        },
        "amountReceived": {
          "type": "number",
          "format": "double"
        },
        "currencyBuying": {
          "type": "string"
        },
        "startPrice": {
          "type": "number",
          "format": "double"
        },
        "endPrice": {
          "type": "number",
          "format": "double"
        },
        "averageOrderCost": {
          "type": "number",
          "format": "double"
        },
        "sideAffected": {
          "type": "string"
        },
        "approximateNominalSlippagePercentage": {
          "type": "number",
          "format": "double"
        },
        "updateProtocol": {
          "type": "string"
        },
        "fullOrderbookSideConsumed": {
          "type": "boolean"
        }
      }
    },
    "gctrpcGetOrderbookMovementResponse": {
      "type": "object",
      "properties": {
        "nominalPercentage": {
          "type": "number",
          "format": "double"
        },
        "impactPercentage": {
          "type": "number",
          "format": "double"
        },
        "slippageCost": {
          "type": "number",
          "format": "double"
        },
        "currencyBought": {
          "type": "string"
        },
        "bought": {
          "type": "number",
          "format": "double"
        },
        "currencySold": {
          "type": "string"
        },
        "sold": {
          "type": "number",
          "format": "double"
        },
        "sideAffected": {
          "type": "string"
        },
        "updateProtocol": {
          "type": "string"
        },
        "fullOrderbookSideConsumed": {
          "type": "boolean"
        },
        "startPrice": {
          "type": "number",
          "format": "double"
        },
        "endPrice": {
          "type": "number",
          "format": "double"
        },
        "noSlippageOccurred": {
          "type": "boolean"
        },
        "averageOrderCost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcGetOrderbookRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "assetType": {
          "type": "string"
        }
      }
    },
    "gctrpcGetOrderbooksResponse": {
      "type": "object",
      "properties": {
        "orderbooks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcOrderbooks"
          }
        }
      }
    },
    "gctrpcGetOrdersRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "assetType": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        }
      }
    },
    "gctrpcGetOrdersResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcOrderDetails"
          }
        }
      }
    },
    "gctrpcGetPortfolioResponse": {
      "type": "object",
      "properties": {
        "portfolio": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcPortfolioAddress"
          }
        }
      }
    },
    "gctrpcGetPortfolioSummaryResponse": {
      "type": "object",
      "properties": {
        "coinTotals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcCoin"
          }
        },
        "coinsOffline": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcCoin"
          }
        },
        "coinsOfflineSummary": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcOfflineCoins"
          }
        },
        "coinsOnline": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcCoin"
          }
        },
        "coinsOnlineSummary": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcOnlineCoins"
          }
        }
      }
    },
    "gctrpcGetRPCEndpointsResponse": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcRPCEndpoint"
          }
        }
      }
    },
    "gctrpcGetSusbsytemsResponse": {
      "type": "object",
      "properties": {
        "subsystemsStatus": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      }
    },
    "gctrpcGetTechnicalAnalysisResponse": {
      "type": "object",
      "properties": {
        "signals": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcListOfSignals"
          }
        }
      }
    },
    "gctrpcGetTickerRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "assetType": {
          "type": "string"
        }
      }
    },
    "gctrpcGetTickersResponse": {
      "type": "object",
      "properties": {
        "tickers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcTickers"
          }
        }
      }
    },
    "gctrpcLendingPayment": {
      "type": "object",
      "properties": {
        "payment": {
          "type": "string"
        },
        "size": {
          "type": "string"
        }
      }
    },
    "gctrpcListOfSignals": {
      "type": "object",
      "properties": {
        "signals": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "gctrpcMarginRate": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string"
        },
        "marketBorrowSize": {
          "type": "string"
        },
        "hourlyRate": {
          "type": "string"
        },
        "yearlyRate": {
          "type": "string"
        },
        "hourlyBorrowRate": {
          "type": "string"
        },
        "yearlyBorrowRate": {
          "type": "string"
        },
        "lendingPayment": {
          "$ref": "#/definitions/gctrpcLendingPayment"
        },
        "borrowCost": {
          "$ref": "#/definitions/gctrpcBorrowCost"
        }
      }
    },
    "gctrpcModifyOrderResponse": {
      "type": "object",
      "properties": {
        "modifiedOrderId": {
          "type": "string"
        }
      }
    },
    "gctrpcOfflineCoinSummary": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "balance": {
          "type": "number",
          "format": "double"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcOfflineCoins": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcOfflineCoinSummary"
          }
        }
      }
    },
    "gctrpcOnlineCoinSummary": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "number",
          "format": "double"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcOnlineCoins": {
      "type": "object",
      "properties": {
        "coins": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcOnlineCoinSummary"
          }
        }
      }
    },
    "gctrpcOpenInterestDataRequest": {
      "type": "object",
      "properties": {
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        }
      }
    },
    "gctrpcOpenInterestDataResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "openInterest": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcOrderDetails": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "clientOrderId": {
          "type": "string"
        },
        "baseCurrency": {
          "type": "string"
        },
        "quoteCurrency": {
          "type": "string"
        },
        "assetType": {
          "type": "string"
        },
        "orderSide": {
          "type": "string"
        },
        "orderType": {
          "type": "string"
        },
        "creationTime": {
          "type": "string"
        },
        "updateTime": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "openVolume": {
          "type": "number",
          "format": "double"
        },
        "fee": {
          "type": "number",
          "format": "double"
        },
        "cost": {
          "type": "number",
          "format": "double"
        },
        "trades": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcTradeHistory"
          }
        },
        "contractAmount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcOrderbookItem": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "gctrpcOrderbookResponse": {
      "type": "object",
      "properties": {
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "currencyPair": {
          "type": "string"
        },
        "bids": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcOrderbookItem"
          }
        },
        "asks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcOrderbookItem"
          }
        },
        "lastUpdated": {
          "type": "string",
          "format": "int64"
        },
        "assetType": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "gctrpcOrderbooks": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "orderbooks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcOrderbookResponse"
          }
        }
      }
    },
    "gctrpcOrders": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "orderStatus": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "gctrpcPairsSupported": {
      "type": "object",
      "properties": {
        "availablePairs": {
          "type": "string"
        },
        "enabledPairs": {
          "type": "string"
        }
      }
    },
    "gctrpcPortfolioAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "coinType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "balance": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcRPCEndpoint": {
      "type": "object",
      "properties": {
        "started": {
          "type": "boolean"
        },
        "listenAddress": {
          "type": "string"
        }
      }
    },
    "gctrpcRemoveEventRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "gctrpcRemovePortfolioAddressRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "coinType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "gctrpcSavedTrades": {
      "type": "object",
      "properties": {
        "price": {
          "type": "number",
          "format": "double"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "side": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "tradeId": {
          "type": "string"
        }
      }
    },
    "gctrpcSavedTradesResponse": {
      "type": "object",
      "properties": {
        "exchangeName": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "trades": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcSavedTrades"
          }
        }
      }
    },
    "gctrpcSetCollateralModeRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "collateralMode": {
          "type": "string"
        }
      }
    },
    "gctrpcSetCollateralModeResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "gctrpcSetDataHistoryJobStatusRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "nickname": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "gctrpcSetExchangePairRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "assetType": {
          "type": "string"
        },
        "pairs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcCurrencyPair"
          }
        },
        "enable": {
          "type": "boolean"
        }
      }
    },
    "gctrpcSetLeverageRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "underlyingPair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "marginType": {
          "type": "string"
        },
        "leverage": {
          "type": "number",
          "format": "double"
        },
        "orderSide": {
          "type": "string"
        }
      }
    },
    "gctrpcSetLeverageResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "underlyingPair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "marginType": {
          "type": "string"
        },
        "orderSide": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "gctrpcSetLoggerDetailsRequest": {
      "type": "object",
      "properties": {
        "logger": {
          "type": "string"
        },
        "level": {
          "type": "string"
        }
      }
    },
    "gctrpcSetMarginTypeRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "marginType": {
          "type": "string"
        }
      }
    },
    "gctrpcSetMarginTypeResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "gctrpcShutdownResponse": {
      "type": "object"
    },
    "gctrpcSimulateOrderRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "side": {
          "type": "string"
        },
        "marginType": {
          "type": "string"
        }
      }
    },
    "gctrpcSimulateOrderResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcOrderbookItem"
          }
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "minimumPrice": {
          "type": "number",
          "format": "double"
        },
        "maximumPrice": {
          "type": "number",
          "format": "double"
        },
        "percentageGainLoss": {
          "type": "number",
          "format": "double"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "gctrpcSubmitOrderRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "side": {
          "type": "string"
        },
        "orderType": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "clientId": {
          "type": "string"
        },
        "assetType": {
          "type": "string"
        },
        "marginType": {
          "type": "string"
        }
      }
    },
    "gctrpcSubmitOrderResponse": {
      "type": "object",
      "properties": {
        "orderPlaced": {
          "type": "boolean"
        },
        "orderId": {
          "type": "string"
        },
        "trades": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcTrades"
          }
        }
      }
    },
    "gctrpcTickerResponse": {
      "type": "object",
      "properties": {
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "lastUpdated": {
          "type": "string",
          "format": "int64"
        },
        "currencyPair": {
          "type": "string"
        },
        "last": {
          "type": "number",
          "format": "double"
        },
        "high": {
          "type": "number",
          "format": "double"
        },
        "low": {
          "type": "number",
          "format": "double"
        },
        "bid": {
          "type": "number",
          "format": "double"
        },
        "ask": {
          "type": "number",
          "format": "double"
        },
        "volume": {
          "type": "number",
          "format": "double"
        },
        "priceAth": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcTickers": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "tickers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcTickerResponse"
          }
        }
      }
    },
    "gctrpcTradeHistory": {
      "type": "object",
      "properties": {
        "creationTime": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "exchange": {
          "type": "string"
        },
        "assetType": {
          "type": "string"
        },
        "orderSide": {
          "type": "string"
        },
        "fee": {
          "type": "number",
          "format": "double"
        },
        "total": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcTrades": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "fee": {
          "type": "number",
          "format": "double"
        },
        "feeAsset": {
          "type": "string"
        }
      }
    },
    "gctrpcUpdateDataHistoryJobPrerequisiteRequest": {
      "type": "object",
      "properties": {
        "nickname": {
          "type": "string"
        },
        "prerequisiteJobNickname": {
          "type": "string"
        }
      }
    },
    "gctrpcUpsertDataHistoryJobRequest": {
      "type": "object",
      "properties": {
        "nickname": {
          "type": "string"
        },
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "interval": {
          "type": "string",
          "format": "int64"
        },
        "requestSizeLimit": {
          "type": "string",
          "format": "int64"
        },
        "dataType": {
          "type": "string",
          "format": "int64"
        },
        "maxRetryAttempts": {
          "type": "string",
          "format": "int64"
        },
        "batchSize": {
          "type": "string",
          "format": "int64"
        },
        "insertOnly": {
          "type": "boolean"
        },
        "conversionInterval": {
          "type": "string",
          "format": "int64"
        },
        "overwriteExistingData": {
          "type": "boolean"
        },
        "prerequisiteJobNickname": {
          "type": "string"
        },
        "decimalPlaceComparison": {
          "type": "string",
          "format": "int64"
        },
        "secondaryExchangeName": {
          "type": "string"
        },
        "issueTolerancePercentage": {
          "type": "number",
          "format": "double"
        },
        "replaceOnIssue": {
          "type": "boolean"
        }
      }
    },
    "gctrpcUpsertDataHistoryJobResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "jobId": {
          "type": "string"
        }
      }
    },
    "gctrpcWebsocketGetInfoResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "supported": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "authenticatedSupported": {
          "type": "boolean"
        },
        "authenticated": {
          "type": "boolean"
        },
        "runningUrl": {
          "type": "string"
        },
        "proxyAddress": {
          "type": "string"
        }
      }
    },
    "gctrpcWebsocketGetSubscriptionsResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "subscriptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcWebsocketSubscription"
          }
        }
      }
    },
    "gctrpcWebsocketSubscription": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "string"
        },
        "pair": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "params": {
          "type": "string"
        }
      }
    },
    "gctrpcWhaleBombRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "priceTarget": {
          "type": "number",
          "format": "double"
        },
        "side": {
          "type": "string"
        },
        "assetType": {
          "type": "string"
        }
      }
    },
    "gctrpcWithdrawCryptoRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "addressTag": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "fee": {
          "type": "number",
          "format": "double"
        },
        "description": {
          "type": "string"
        },
        "chain": {
          "type": "string"
        }
      }
    },
    "gctrpcWithdrawFiatRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "description": {
          "type": "string"
        },
        "bankAccountId": {
          "type": "string"
        }
      }
    },
    "gctrpcWithdrawResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "gctrpcWithdrawalEventByIDRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "gctrpcWithdrawalEventByIDResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/gctrpcWithdrawalEventResponse"
        }
      }
    },
    "gctrpcWithdrawalEventResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "exchange": {
          "$ref": "#/definitions/gctrpcWithdrawlExchangeEvent"
        },
        "request": {
          "$ref": "#/definitions/gctrpcWithdrawalRequestEvent"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "gctrpcWithdrawalEventsByDateRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "gctrpcWithdrawalEventsByExchangeRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "currency": {
          "type": "string"
        },
        "assetType": {
          "type": "string"
        }
      }
    },
    "gctrpcWithdrawalEventsByExchangeResponse": {
      "type": "object",
      "properties": {
        "event": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/gctrpcWithdrawalEventResponse"
          }
        }
      }
    },
    "gctrpcWithdrawalRequestEvent": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "fiat": {
          "$ref": "#/definitions/gctrpcFiatWithdrawalEvent"
        },
        "crypto": {
          "$ref": "#/definitions/gctrpcCryptoWithdrawalEvent"
        }
      }
    },
    "gctrpcWithdrawlExchangeEvent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
