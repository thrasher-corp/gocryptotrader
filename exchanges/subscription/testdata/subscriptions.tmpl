{{- if eq $.S.Channel "feature1" -}}
	{{/* One channel to rule them all */}}
	feature1
{{- else if eq $.S.Channel "feature2" -}}
	{{/* One channel per asset */}}
	{{- range $asset, $pairs := $.AssetPairs }}
		{{ assetName $asset }}-feature2@ {{- $.S.Interval.Short }}
		{{- $.AssetSeparator }}
	{{- end }}
{{- else if eq $.S.Channel "feature3" }}
	{{/* One channel per pair per asset */}}
	{{- range $asset, $pairs := $.AssetPairs }}
		{{- range $pair := $pairs -}}
			{{ assetName $asset }}-{{ $pair.Swap.String -}} -feature3@ {{- $.S.Levels }}
			{{- $.PairSeparator -}}
		{{- end -}}
		{{- $.AssetSeparator -}}
	{{- end -}}
{{- else if eq $.S.Channel "feature4" }}
	feature4-authed
{{- else if eq $.S.Channel "feature5" }}
	{{/* Changing AssetPairs */}}
	{{- feature5 $.AssetPairs -}}
	spot-btcusdt-feature5
	{{- $.PairSeparator -}}
	{{- $.AssetSeparator -}}
	{{/* futures doesn't output anything, but we need an asset separator, so this previous one must not be stripped */}}
	{{- $.AssetSeparator -}}
{{- else if eq $.S.Channel "feature6" }}
	{{/* Batching */}}
	{{- range $asset, $pairs := $.AssetPairs }}
        {{- if eq $asset.String "spot" }}
            {{- range $batch := batch $pairs 3 -}}
                {{ assetName $asset }}-{{ $batch.Join -}} -feature6
                {{- $.PairSeparator -}}
            {{- end -}}
            {{- $.BatchSize -}} 3
        {{- end }}
	{{- end -}}
{{- else if eq $.S.Channel "feature7" }}
	{{/* Only pairs we expect */}}
	{{- range $asset, $pairs := $.AssetPairs }}
        {{- if eq $asset.String "spot" }}
			{{ assetName $asset }}-{{ $pairs.Join -}} -feature7
		{{- end -}}
	{{- end -}}
{{- end -}}
